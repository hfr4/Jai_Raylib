/* ******************************************************************************************
*
*   raylib [textures] example - Load textures from raw data
*
*   NOTE: Images are loaded in CPU memory (RAM); textures are loaded in GPU memory (VRAM)
*
*   Example originally created with raylib 1.3, last time updated with raylib 3.5
*
*   Example licensed under an unmodified zlib/libpng license, which is an OSI-certified,
*   BSD-like license that allows static linking with closed source software
*
*   Copyright (c) 2015-2024 Ramon Santamaria (@raysan5)
*
********************************************************************************************/

#import "Basic";
#import "Raylib";

main :: () {
    SCREEN_WIDTH  :: 800;
    SCREEN_HEIGHT :: 450;

    InitWindow(SCREEN_WIDTH, SCREEN_HEIGHT, "raylib [textures] example - texture from raw data");

    // NOTE: Textures MUST be loaded after Window initialization (OpenGL context is required)

    // Load RAW image data (512x512, 32bit RGBA, no file header)
    fudesumiRaw := LoadImageRaw("resources/fudesumi.raw", 384, 512, xx PixelFormat.UNCOMPRESSED_R8G8B8A8, 0);
    fudesumi := LoadTextureFromImage(fudesumiRaw);  // Upload CPU (RAM) image to GPU (VRAM)
    UnloadImage(fudesumiRaw);                                // Unload CPU (RAM) image data

    // Generate a checked texture by code
    width  : s32 = 960;
    height : s32 = 480;

    // Dynamic memory allocation to store pixels data (Color type)
    pixels := NewArray(width*height, Color);

    for y: 0..height - 1
    {
        for x: 0..width - 1
        {
            if (((x/32+y/32)/1)%2 == 0) pixels[y*width + x] = ORANGE;
            else                        pixels[y*width + x] = GOLD;
        }
    }

    // Load pixels data into an image structure and create texture
    checkedIm := Image.{
        data    = pixels.data,             // We can assign pixels directly to data
        width   = width,
        height  = height,
        format  = xx PixelFormat.UNCOMPRESSED_R8G8B8A8,
        mipmaps = 1
    };
    // UnloadImage(checkedIm);         // Unload CPU (RAM) image data (pixels)

    checked := LoadTextureFromImage(checkedIm);

    SetTargetFPS(60);

    while !WindowShouldClose() {

        // TODO: Update your variables here


        BeginDrawing();

            ClearBackground(RAYWHITE);

            DrawTexture(checked, SCREEN_WIDTH/2 - checked.width/2, SCREEN_HEIGHT/2 - checked.height/2, Fade(WHITE, 0.5));
            DrawTexture(fudesumi, 430, -30, WHITE);

            DrawText("CHECKED TEXTURE ", 84, 85, 30, BROWN);
            DrawText("GENERATED by CODE", 72, 148, 30, BROWN);
            DrawText("and RAW IMAGE LOADING", 46, 210, 30, BROWN);

            DrawText("(c) Fudesumi sprite by Eiden Marsal", 310, SCREEN_HEIGHT - 20, 10, BROWN);

        EndDrawing();
    }
    UnloadTexture(fudesumi);    // Texture unloading
    UnloadTexture(checked);     // Texture unloading

    CloseWindow();
}